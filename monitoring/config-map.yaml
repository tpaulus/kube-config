apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.rules: ""
  prometheus.yml: |-
    global:
      scrape_interval: 5s
      evaluation_interval: 5s
    rule_files:
      - /etc/prometheus/prometheus.rules
      - /run/prometheus-rules/kube-config/_alerts/*
    storage:
      tsdb:
        out_of_order_time_window: 1m
    alerting:
      alertmanagers:
      - scheme: http
        static_configs:
        - targets:
          - "alertmanager.monitoring.svc:8080"
    scrape_configs:
      - job_name: 'node-exporter'
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_endpoints_name]
          regex: 'node-exporter'
          action: keep
      # - job_name: 'kubernetes-apiservers'  # Disabled due to the number of timeseries these create
      #   kubernetes_sd_configs:
      #   - role: endpoints
      #   scheme: https
      #   tls_config:
      #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      #   bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      #   relabel_configs:
      #   - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
      #     action: keep
      #     regex: default;kubernetes;https
      - job_name: 'kubernetes-nodes'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
        - role: pod
        relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name
        - source_labels: [__meta_kubernetes_pod_label_app]
          action: replace
          target_label: kubernetes_app_name
        - source_labels: [__meta_kubernetes_pod_container_name]
          action: replace
          target_label: kubernetes_container_name
      - job_name: 'kube-state-metrics'
        static_configs:
          - targets: ['kube-state-metrics.kube-system.svc.cluster.local:8080']
      - job_name: 'kubernetes-cadvisor'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
        - role: node
        relabel_configs:
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
      - job_name: 'kubernetes-service-endpoints'
        kubernetes_sd_configs:
        - role: endpoints
        relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
          action: replace
          target_label: __scheme__
          regex: (https?)
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          target_label: __address__
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name
      - job_name: 'netbox-devices'
        relabel_configs:
        - source_labels: [__meta_netbox_primary_ip4, __address__]
          regex: ([0-9A-Z.:]+);[^:]+:([0-9]+)
          target_label: __address__
          replacement: ${1}:$2
          action: replace
        - source_labels: [__address__]
          action: keep
          regex: ((?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?):[0-9]+)
        - source_labels: [__meta_netbox_name]
          action: replace
          target_label: netbox_device_name
        http_sd_configs:
          - url: https://netbox.ing.k3s.brickyard.whitestar.systems/api/plugins/prometheus-sd/devices/?status=active
            authorization:
              type: 'Token'
              credentials_file: /run/secrets/netbox-token/netbox-token
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-server-conf
  namespace: monitoring
data:
  alertmanager.yml: |-
    route:
      group_by: ['alertname']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 4h
      receiver: 'email-tom'  # Default Receiver
      routes:
      - receiver: 'email-tom'
        group_wait: 30s
        matchers:
        - notify=~"(.+ )?email-tom( .+)?"
      - receiver: 'email-mel'
        group_wait: 30s
        matchers:
        - notify=~"(.+ )?email-mel( .+)?"
    receivers:
    - name: 'email-tom'
      email_configs:
      - to: tom@tompaulus.com
        send_resolved: true
    - name: 'email-mel'
      email_configs:
      - to: alerts@mel.earth
        send_resolved: false
    global:
      smtp_from: alertmanager@whitestar.systems
      smtp_smarthost: "email-smtp.us-west-2.amazonaws.com:587"
      smtp_auth_username: AKIAJ6SLTZFOHHZSTUKQ
      smtp_auth_password_file: /etc/alertmanager-config/smtp_pass
      smtp_require_tls: true

---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: smtp
  namespace: monitoring
spec:
  itemPath: "vaults/K3S/items/SMTP"

---
apiVersion: onepassword.com/v1
kind: OnePasswordItem
metadata:
  name: netbox-token
  namespace: monitoring
spec:
  itemPath: "vaults/K3S/items/Prometheus-Netbox-Token"
