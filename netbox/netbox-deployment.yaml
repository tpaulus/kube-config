---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox
  namespace: netbox
  labels:
    k8s-app: netbox
spec:
  replicas: 3
  selector:
    matchLabels:
      k8s-app: netbox
  template:
    metadata:
      labels:
        k8s-app: netbox
    spec:
      containers:
        # NetBox container using the netbox-docker image: https://github.com/netbox-community/netbox-docker
        - name: netbox
          image: netboxcommunity/netbox:v4.2.6
          ports:
            - name: http
              containerPort: 8080
          startupProbe:  # will mark the pod as ready once the initialization script is completed and will probe every 20 seconds
            httpGet:
              path: /
              port: http
            failureThreshold: 12
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 20
          livenessProbe:
            httpGet:
              path: /
              port: http
            periodSeconds: 20
          envFrom:
            - configMapRef:
                name: netbox-configmap
          env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: db
                  key: database
            - name: DB_HOST
              value: "db.netbox.svc"
            - name: DB_PORT
              value: "5432"
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: db
                  key: username
            - name: DB_WAIT_DEBUG
              value: '1'
            - name: SOCIAL_AUTH_OIDC_SECRET
              valueFrom:
                secretKeyRef:
                  name: netbox-secret
                  key: SOCIAL_AUTH_OIDC_SECRET
          lifecycle:  # Will run the post-startup scripts detailed in netbox-startup-configmap.yaml
            postStart:
              exec:
                command:
                  - /bin/sh
                  - -c
                  - >
                    bash /home/install-plugins.sh && bash /home/start-rqworker.sh
                    && bash /home/nginx-caching-fix.sh
          resources:
            requests:
              memory: 1024Mi
              cpu: '0.5'
            limits:
              memory: 2048Mi
              cpu: '1'
          volumeMounts:
            # Mounting secrets for netbox and other related components
            - name: db-password
              mountPath: /run/secrets/db_password
              subPath: db_password
              readOnly: true
            - name: napalm-password
              mountPath: /run/secrets/napalm_password
              subPath: napalm_password
            - name: secret-key
              mountPath: /run/secrets/secret_key
              subPath: secret_key
              readOnly: true
            - name: django-psql-certs
              mountPath: /root/.postgresql/
            # Persistent Volume paths
            - name: netbox-media-files  # Allows for multiple replicas of the netbox pod to be available
              mountPath: /opt/netbox/netbox/media
            - mountPath: /etc/netbox/config/netbox-plugins.py
              name: netbox-plugins
              subPath: netbox-plugins.py
            - mountPath: /home/install-plugins.sh
              name: install-plugins
              subPath: install-plugins.sh
            - mountPath: /home/start-rqworker.sh
              name: start-rqworker
              subPath: start-rqworker.sh
            - mountPath: /home/nginx-caching-fix.sh
              name: nginx-caching-fix
              subPath: nginx-caching-fix.sh
            - mountPath: /opt/netbox/netbox/netbox/custom_pipeline.py
              name: custom-pipeline
              subPath: custom_pipeline.py
            - mountPath: /etc/netbox/config/authentik.py
              name: authentik
              subPath: authentik.py
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
      restartPolicy: Always
      dnsConfig:
        options:
          - name: ndots
            value: '1'
      dnsPolicy: ClusterFirst
      volumes:
        # Reference to configmaps and PVs
        - name: netbox-media-files
          persistentVolumeClaim:
            claimName: netbox-media-pvc
            readOnly: false
        - name: netbox-plugins
          configMap:
            name: startup-configmap
            items:
              - key: netbox-plugins.py
                path: netbox-plugins.py
        - name: install-plugins
          configMap:
            name: startup-configmap
            items:
              - key: install-plugins.sh
                path: install-plugins.sh
        - name: start-rqworker
          configMap:
            name: startup-configmap
            items:
              - key: start-rqworker.sh
                path: start-rqworker.sh
        - name: nginx-caching-fix
          configMap:
            name: startup-configmap
            items:
              - key: nginx-caching-fix.sh
                path: nginx-caching-fix.sh
        - name: custom-pipeline
          configMap:
            name: startup-configmap
            items:
              - key: custom_pipeline.py
                path: custom_pipeline.py
        - name: authentik
          configMap:
            name: startup-configmap
            items:
              - key: authentik.py
                path: authentik.py
        # Populate via secret
        - name: db-password
          secret:
            secretName: db
            items:
              - key: password
                path: db_password
        - name: napalm-password
          secret:
            secretName: netbox-secret
            items:
              - key: napalm_password
                path: napalm_password
        - name: secret-key
          secret:
            secretName: netbox-secret
            items:
              - key: secret_key
                path: secret_key
        - name: superuser-password
          secret:
            secretName: netbox-secret
            items:
              - key: superuser_password
                path: superuser_password
        - name: superuser-api-token
          secret:
            secretName: netbox-secret
            items:
              - key: superuser_api_token
                path: superuser_api_token
        - name: django-psql-certs
          emptyDir: {}
